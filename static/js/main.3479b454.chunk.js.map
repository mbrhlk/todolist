{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA6CgBA,MA3ChB,SAAkBC,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAuBxB,OAtBEC,qBAAU,WACRF,EAASG,QAAQC,WAsBnB,uBAAMC,UAAY,YAAYC,SAZX,SAAAC,GACnBA,EAAEC,iBAEFZ,EAAMU,SAAS,CACbG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAGRC,EAAS,KAIT,UACE,uBACEe,KAAK,OACLC,YAAY,aACZC,MAAOlB,EACPmB,KAAM,OACNZ,UAAU,aACVa,SAvBe,SAAAX,GACnBR,EAASQ,EAAEY,OAAOH,QAuBdI,IAAKpB,IAEP,wBAAQK,UAAU,cAAlB,0B,eCOSgB,MAxCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAC9C,EAAwB5B,mBAAS,CAC/BY,GAAI,KACJO,MAAO,KAFT,mBAAOU,EAAP,KAAaC,EAAb,KAaA,OAAID,EAAKjB,GACA,cAAC,EAAD,CAAUiB,KAAMA,EAAMpB,SATV,SAAAU,GACnBS,EAAWC,EAAKjB,GAAIO,GACpBW,EAAQ,CACNlB,GAAI,KACJO,MAAO,QAQJM,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACf,sBAAKzB,UAAWwB,EAAKE,WAAa,oBAAoB,WAAtD,UAGE,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKpB,KAApD,SACGoB,EAAKhB,MADEgB,EAAKpB,IAGf,sBAAKJ,UAAU,QAAf,UACE,cAAC,IAAD,CACA2B,QAAS,kBAAMR,EAAWK,EAAKpB,KAC/BJ,UAAU,gBAEV,cAAC,IAAD,CACA2B,QAAS,kBAAML,EAAQ,CAAElB,GAAIoB,EAAKpB,GAAIO,MAAOa,EAAKhB,QAClDR,UAAU,mBAZTyB,OC4BMG,MAlDf,WACE,MAA0BpC,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcY,EAAd,KAwCA,OACE,gCACE,gDACA,cAAC,EAAD,CAAU5B,SAzCE,SAAAuB,GACd,GAAIA,EAAKhB,OAAQ,aAAQsB,KAAKN,EAAKhB,MAAnC,CAIF,IAAMuB,EAAQ,CAAIP,GAAJ,mBAAaP,IAE3BY,EAASE,OAmCL,cAAC,EAAD,CAAMd,MAAOA,EAAOC,aAfL,SAAAd,GACnB,IAAI4B,EAAef,EAAMM,KAAI,SAAAC,GAI3B,OAHIA,EAAKpB,KAAOA,IACdoB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAQ2Cb,WAvBnC,SAAAf,GACjB,IAAM6B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAIA,EAAKpB,KAAOA,KAExDyB,EAASI,IAoBqEb,WAhC7D,SAACe,EAAQC,GACtBA,EAAS5B,OAAQ,aAAQsB,KAAKM,EAAS5B,OAG3CqB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAACe,GAAD,OAAUA,EAAKlC,KAAO+B,EAASC,EAAWE,eCTvDC,MARf,WACE,OACE,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,OCFNwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3479b454.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState('');\n\n  const inputRef = useRef(null)\n    useEffect(()=> {\n      inputRef.current.focus()\n\n\n\n    })\n\n  const handleChange = e =>{\n    setInput(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n\n    });\n    setInput('');\n  };\n\n  return (\n    <form className = 'todo-form' onSubmit={handleSubmit}>\n      <input\n        type='text'\n        placeholder='Add a todo'\n        value={input}\n        name= 'text'\n        className='todo-input'\n        onChange={handleChange}\n        ref={inputRef}\n      />\n      <button className='todo-button'>Add todo</button>\n    </form>\n\n  );\n}\n\n export default TodoForm;","import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList'\nimport { RiCloseCircleLine} from 'react-icons/ri'\nimport { TiEdit} from 'react-icons/ti'\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value)\n    setEdit({\n      id: null,\n      value: ''\n    })\n  }\n\n  if (edit.id){\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div className={todo.isComplete ? 'todo-row complete':'todo-row'} \n    key={index}>\n\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n        onClick={() => removeTodo(todo.id)}\n        className='delete-icon'\n        />\n        <TiEdit\n        onClick={() => setEdit({ id: todo.id, value: todo.text})}\n        className='edit-icon' />\n      </div>\n\n    </div>\n  ))\n   \n}\n\nexport default Todo\n","import React, {useState} from 'react'\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if(!todo.text || /ˆ\\s*$/.test(todo.text)){\n      return;\n\n  }\n  const newTodos = [todo, ...todos]\n\n  setTodos(newTodos)\n};\n\nconst updateTodo = (todoId, newValue) => {\n  if(!newValue.text || /ˆ\\s*$/.test(newValue.text)){\n    return;\n  }\n  setTodos(prev => prev.map((item) => item.id === todoId ? newValue : item ))\n  ;\n};\n\n\nconst removeTodo = id => {\n  const removeArr = [...todos].filter(todo => todo.id !== id)\n\n  setTodos(removeArr);\n\n};\n\n\nconst completeTodo = id => {\n  let updatedTodos = todos.map(todo => {\n    if (todo.id === id) {\n      todo.isComplete = !todo.isComplete;\n    }\n    return todo;\n  });\n  setTodos(updatedTodos);\n};\n\n\n  return (\n    <div>\n      <h1> My TO-DO list</h1>\n      <TodoForm onSubmit={addTodo}/>\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo = {removeTodo} updateTodo = {updateTodo} />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}